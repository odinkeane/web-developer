{
    "data": {
        "Введение в JavaScript": [
            "# Задача №1\n В маленьком городке жил программист по имени Алекс. Однажды он решил создать программу, которая будет приветствовать каждого, кто к ней обратится. Он использовал **prompt**, чтобы узнать имя пользователя, и **alert**, чтобы сказать: 'Привет, [имя]! Добро пожаловать в мир программирования!'",
            "# Задача №2\n В деревне чисел жил мудрый старец, который всегда помогал жителям решать их проблемы. Однажды к нему пришел юноша и попросил узнать, сколько будет, если сложить два числа. Старец создал магическую программу, которая принимала два числа с помощью **prompt** и выводила их сумму с помощью **alert**, радуя юношу.",
            "# Задача №3\n В небольшом городке жила девушка по имени Лена, увлеченная писательница. Каждый день она записывала свои мысли в блокнот. Однажды, задумавшись о длине своих строк, Лена решила провести эксперимент. Она написала программу, которая с помощью функции **prompt** запрашивала у пользователя строку, а затем вычисляла её длину и выводила результат с помощью функции **alert**.",
            "# Задача №4\n В небольшом городке жил программист по имени Алекс, который любил решать задачи и писать код. Он написал программу, которая сначала запрашивала у пользователя строку с помощью функции **prompt**. Это было как приглашение к диалогу, и он с нетерпением ждал, что же введет пользователь. После того как строка была введена, программа вычисляла последний символ и выводила его на экран с помощью функции **alert**.",
            "# Задача №5\n Программист Макс написал программу, которая сначала запрашивала у пользователя число с помощью функции **prompt**. Это было как приглашение к увлекательному исследованию. После того как пользователь ввел число, Макс извлек первую и последнюю цифры. Он использовал простые методы, чтобы получить эти цифры, а затем вывел их в консоль. Но на этом он не остановился: он также вычислил сумму первой и последней цифры и вывел результат. Когда программа завершила выполнение, в консоли появились три сообщения: первая цифра, последняя цифра и их сумма.",
            "# Задача №6\n В далеком будущем, на борту космического корабля 'Звездный Путешественник', жил программист по имени Луна. Она была не только мастером кода, но и настоящим исследователем, мечтающим о новых мирах и неизведанных галактиках. Однажды, во время полета к планете, покрытой загадочными лесами, Луна задумалась о том, как можно вычислить площадь прямоугольника, чтобы спроектировать идеальную базу для своих исследований. Луна решила написать программу, которая бы помогла ей в этом. Она начала с того, что запросила у своего бортового компьютера размеры прямоугольника с помощью функции **prompt**. Это было как общение с верным другом, который всегда готов помочь. После того как она ввела длину и ширину, Луна использовала простую формулу: площадь равна длине, умноженной на ширину.",
            "# Задача №7\n В недалеком будущем, в мире, где технологии и финансы переплетаются, жил молодой финансист по имени Артем. Он знал, что многие люди не осознают, сколько они на самом деле переплачивают за свои дома. С помощью функции **prompt** он начал запрашивать у пользователей информацию о размере кредита, процентной ставке и сроке кредита. После того как Артем получил все необходимые данные, он использовал формулу для расчета переплаты: он вычислил общую сумму, которую клиент должен будет выплатить, и вычел из нее первоначальную сумму кредита. Когда программа завершила выполнение, на экране компьютера появилось сообщение с результатом: сумма переплаты по кредиту, которую клиент должен был бы учесть при планировании своих финансов.",
            "# Задача №8\n Однажды, во время работы над проектом, Ника задумалась о том, как важно правильно обрабатывать даты. С помощью функции **prompt** она начала запрашивать у пользователей дату в формате ##.##.####. Ника знала, что правильный ввод данных — это первый шаг к успешному решению задачи.После того как она получила строку с датой, Ника использовала методы для разбора строки и извлечения дня, месяца и года. Затем, с помощью функции **alert**, она выводила результат на экран: 'День: [день], Месяц: [месяц], Год: [год]'."
        ],
        "Условия": [
            "# Задача №1 Проверка числа\n Пользователь вводит число с помощью **prompt**. Если число больше 50, то с помощью **alert** вывести 'Число больше 50', иначе 'Число меньше или равно 50'.",
            "# Задача №2 Четность\n Пользователь вводит число с помощью **prompt**. Проверить, является ли оно четным, и вывести соответствующее сообщение.",
            "# Задача №3 Кратность\n Пользователь вводит число с помощью **prompt**. Проверить, является ли число кратным 11, и вывести соответствующее сообщение.",
            "# Задача №4 Проверка логина и пароля \n Пользователь вводит логин и пароль с помощью **prompt**. Если логин равен 'admin' и пароль равен '12345', вывести 'Доступ разрешен', иначе — 'Доступ запрещен'.",
            "# Задача №5 Калькулятор \n Пользователь вводит два числа и оператор (+, -, *, /) с помощью **prompt**. В зависимости от оператора вывести результат вычисления.",
            "# Задача №6 Проверка на положительное, отрицательное или ноль\n Пользователь вводит число. Проверить, является ли оно положительным, отрицательным или нулем, и вывести соответствующее сообщение.",
            "# Задача №7 День недели\n Пользователь вводит число от 1 до 7. Вывести название дня недели, соответствующее этому числу.",
            "# Задача №8 Максимум из трех чисел\n Пользователь вводит три числа. Вывести наибольшее из них.",
            "# Задача №9 Високосный год\n Пользователь вводит год. Проверить, является ли он високосным, и вывести соответствующее сообщение.",
            "# Задача №10 Конвертер температуры\n Пользователь вводит температуру в градусах Цельсия. Предложить выбор: конвертировать в Фаренгейты или Кельвины. Вывести результат.",
            "# Задача №11 Подписка на рассылку\n Пользователю предлагается подписаться на рассылку. Спросить его: 'Хотите подписаться на нашу рассылку?'. Если пользователь подтверждает, вывести 'Спасибо за подписку!', иначе — 'Подписка отменена'.",
            "# Задача №12 Переход на другой сайт\n Пользователь хочет перейти на другой сайт. Спросить его: 'Вы хотите покинуть эту страницу?'. Если пользователь подтверждает, перенаправить его на другой сайт (используя `window.location`), иначе вывести 'Переход отменен'.",
            "# Задача №13 Сумма цифр\n Пользователь вводит шестизначное число. Проверьте, что сумма первых трех цифр равняется сумме вторых трех цифр. Если это так - выведите 'Сумма совпадает', в противном случае выведите 'Сумма отличается'. Предусмотрите то, что количество цифр должно быть точно равно 6. Если цифр больше или меньше, то выведите сообщение 'Неправильный ввод'.",
            "# Задача №14 Последний символ\n Пользователь вводит какое-либо слово. Получите его последнюю букву. Если слово заканчивается на мягкий знак, то получите предпоследнюю букву. Если при вводе пустая строка, то выведите 'Пользователь ничего не ввел'.",
            "# Задача №15 Викторина\n Создайте викторину, состояющую из 5 вопросов. Вопросы можете придумать на свое усмотрение. В конце викторины выведите результат и одну из следующих подписей: **5/5! Круто!**, **4/5! Хорошо!**, **3/5! Неплохо**. Если оценка ниже, то просто выводить полученный результат."
        ],
        "DOM": [
            "# Задача №1 Создание абзаца\n Создайте абзац с помощью метода **createElement**. Запишите в него фразу 'Это мой первый абзац' и с помощью **document.body.appendChild** поместите его на страницу",
            "# Задача №2 Изменение текста элемента\n Создайте на странице с помощью HTML тег h1 и найдите его с помощью метода **querySelector**. Измените его текст на 'Привет, мир!'.",
            "# Задача №3 Информация о пользователе\n С помощью **prompt** считайте имя пользователя. Запишите его в созданный тег **h1**",
            "# Задача №4 Добавление класса\n Добавить класс 'highlight' к элементу с классом 'content'. В классе 'highlight' задайте цвет (на свое усмотрение), шрифт и размер шрифта.",
            "# Задача №5 Вопрос из викторины\n С помощью **prompt** спросить у пользователя вопрос: 'Сколько минут в часе?' Если пользователь ответит правильно (60), то вывести на страницу абзац с содержимым 'правильный ответ' и покрасить его в зеленый цвет (задать класс или использовать inline-стили). В противном случае, вывести 'ответ неверный'",
            "# Задача №6 Поиск элемента и изменение его класса\n Найдите элемент с классом my-class и добавьте ему класс active. Если такого элемента нет, создайте его и добавьте оба класса.",
            "# Задача №7 Создание списка.\n Создайте список с помощью createElement, в котором будет расположено 3 элемента списка.",
            "# Задача №8 Рисование прямоугольников и квадратов.\n Напишите программу, которая будет отрисовывать прямоугольник или круг в зависимости от первоначального выбора. Если выбирается квадрат, то нужно запрашивать длину и ширину квадрата и на основе этих данных отрисовывать прямоугольник. Если запрашивается круг, то спрашивается только его диаметр. По итогу на экране должен быть отрисован или прямоугольник, или круг, или надпись 'название фигуры не распознано' если было введено что-то другое",
            "# Задача №9 Мини проект - проверка на четность и простоту \nВ данном проекте вам нужно написать алгоритм, определяющий является ли число четным и простым. Для считывания значения используйте функцию prompt. В зависимости от ответа на страницу должны выводиться следующие сообщения: 'Число [n] простое' и 'Число [n] четное'. Если число не является ни четным ни простым, то выводить сообщение: 'число не является ни четным ни простым'.\n ## Дополнение к заданию \nПридумайте интерфейс, в котором будет текстовое поле **input** и кнопка **button** и познакомьтесь с методом **addEventListener** для кнопок и событием **onClick**"
        ],

        "События": [
            "# Задача №1 Покраска абзаца \n Создайте абзац и кнопку на web-странице. Напишите алгоритм, который позволяет по нажатию на кнопку изменять цвет абзаца на красный.",
            "# Задача №2 Считывание данных с текстового поля\n Напишите алгоритм, который по нажатию на кнопку считывает данные с текстового поля и выводит считанное содержимое с помощью **alert**",
            "# Задача №3 Калькулятор двух чисел \n Создайте три текстовых поля. В первое поле считывается первое число, во второе - второе число, в третье - используемый знак (*,/,-,+). По результату в alert будет выводиться результат вычислений. \n ## Задача со звездочкой \n Реализуйте алгоритм, позволяющий сохранять вычисления в историю в формате: \n #### [первое_число] [знак] [второе_число] = [результат]",
            "# Задача №4 Прямоугольник \n Создайте два текстовых поля - ширина и высота. По нажатию на кнопку данные должны считываться с полей и на их основе отображаться прямоугольник в соответствии с считанными значениями",
            "# Задача №5 Генератор абзацев \n Создайте кнопку по нажатию на который создается абзац с текстом '**абзац-[номер_абзаца]**'",
            "# Задача №6 Создайте 30 абзацев на странице. По нажатию на кнопку удаляйте первый встреченный абзац. Если абзацев больше не осталось, то с помощью **alert** выводите сообщение '**Абзацев больше нет**'",
            "# Задача №7. Вопрос \n Создайте блок, в котором есть заголовок, поле для ввода текста и кнопка. В заголовке должен быть какой-либо вопрос (например, в каком году был основан Санкт-Петербург?). Если ответ правильный, то границы блока должны окраситься в зеленый и внизу блока должна вывестись информация: 'правильно'. Если же ответ неправильный, то граница окрашивается в красный и выводится количество оставшихся попыток (по умолчанию их 5). \n ## Пример \n Пример можно посмотреть по ссылке: \n #### https://odinkeane.github.io/web-developer/4-7.gif ",
            "# Задача №8. Заметки \n Создайте страницу с заметками. Изначально на странице заметок нет. Для их создания используется блок, в котором находится input для названия заметки и text-area для ее описания. По нажатию на кнопку 'создать заметку' заметка должна создаваться но только в том случае, если оба поля (input и textarea) заполнены. Для каждой заметки предусмотрите функционал, который позволит удалить ее со страницы по нажатию на соответствующую кнопку. \n ## Пример \n Пример можно посмотреть по ссылке: \n #### https://odinkeane.github.io/web-developer/4-8.gif "
        ]
    }
}